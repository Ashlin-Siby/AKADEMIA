# Generated by Django 2.1.3 on 2018-12-01 09:28

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0009_alter_user_last_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="MyCustomUser",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                ("last_login", models.DateTimeField(blank=True, null=True, verbose_name="last login")),
                ("username", models.CharField(max_length=300, unique=True, validators=[django.core.validators.RegexValidator(code="Invalid Username.Please Check It!!!", message="Incorrect Username - Should be Alphanumeric.", regex="^[0-9a-zA-Z.+-]*$")])),
                ("email", models.EmailField(max_length=50, unique=True, verbose_name="email address")),
                ("first_name", models.CharField(blank=True, default=None, max_length=50, null=True, validators=[django.core.validators.RegexValidator(message="First Name shouldn't contains Numbers, Special Characters etc.", regex="^[a-zA-Z.+-]*$")])),
                ("last_name", models.CharField(blank=True, default=None, max_length=50, null=True, validators=[django.core.validators.RegexValidator(message="Last Name shouldn't contains Numbers, Special Characters etc.", regex="^[a-zA-Z.+-]*$")])),
                ("is_superuser", models.BooleanField(default=False)),
                ("is_staff", models.BooleanField(default=False)),
                ("is_teacher", models.BooleanField(default=False)),
                ("is_student", models.BooleanField(default=False)),
                ("groups", models.ManyToManyField(blank=True, help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.", related_name="user_set", related_query_name="user", to="auth.Group", verbose_name="groups")),
                ("user_permissions", models.ManyToManyField(blank=True, help_text="Specific permissions for this user.", related_name="user_set", related_query_name="user", to="auth.Permission", verbose_name="user permissions")),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Batch",
            fields=[
                ("batchYear", models.PositiveSmallIntegerField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name="EventsInfo",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("date", models.DateField(auto_now=True)),
                ("description", models.TextField(max_length=150)),
                ("referenceLink", models.URLField()),
                ("type", models.TextField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name="Files",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("filePath", models.FileField(upload_to="uploads/%Y/%m/%d/", verbose_name="File")),
                ("fileName", models.CharField(max_length=100)),
                ("fileURL", models.URLField(blank=True, default=None, null=True, verbose_name="File URL")),
                ("fileType", models.CharField(choices=[("notes", "Notes"), ("question_paper", "Question Papers"), ("study_material", "Study Material")], max_length=20, verbose_name="File Type")),
            ],
        ),
        migrations.CreateModel(
            name="Semester",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("semesterNo", models.PositiveSmallIntegerField()),
                ("batchYear", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="summer_project.Batch")),
            ],
        ),
        migrations.CreateModel(
            name="StudentInfo",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("father_name", models.CharField(max_length=30, null=True)),
                ("semester", models.CharField(max_length=10)),
                ("department", models.CharField(max_length=30)),
                ("roll_no", models.CharField(max_length=10)),
                ("contact", models.PositiveIntegerField(null=True)),
                ("pic", models.ImageField(blank=True, upload_to="profile_pic")),
                ("batch", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="summer_project.Batch")),
                ("user", models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name="Subjects",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("subjectCode", models.CharField(max_length=6)),
                ("subjectName", models.CharField(max_length=150)),
                ("teacherName", models.CharField(max_length=50)),
                ("semesterNo", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name="Semester_No", to="summer_project.Semester")),
            ],
        ),
        migrations.CreateModel(
            name="TeacherInfo",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("designation", models.CharField(max_length=30)),
                ("education_qualification", models.CharField(max_length=200)),
                ("specialization_area", models.CharField(max_length=100)),
                ("department", models.CharField(max_length=30)),
                ("add_role", models.CharField(blank=True, max_length=40)),
                ("web_link", models.URLField(blank=True)),
                ("contact", models.PositiveIntegerField()),
                ("pic", models.ImageField(blank=True, upload_to="profile_pic")),
                ("user", models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name="files",
            name="subjCode",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name="Subject_Code", to="summer_project.Subjects", verbose_name="Subject Code"),
        ),
        migrations.AddField(
            model_name="files",
            name="teacherName",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name="Teaher_Name", to="summer_project.Subjects", verbose_name="Teacher Name"),
        ),
        migrations.AddField(
            model_name="files",
            name="uploadedBy",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name="Uploaded By"),
        ),
    ]
